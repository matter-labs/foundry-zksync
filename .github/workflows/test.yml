name: test

on:
    push:
        branches:
            - main
    pull_request:

concurrency:
    cancel-in-progress: true
    group: ${{github.workflow}}-${{github.ref}}

env:
    CARGO_TERM_COLOR: always

jobs:
    doctests:
        name: doc tests
        runs-on: ubuntu-22.04-github-hosted-16core
        timeout-minutes: 60
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
            - uses: Swatinem/rust-cache@v2
              with:
                cache-on-failure: true
            - name: cargo test
              run: cargo test --doc -p zkforge -p zkcast
              env:
                RUST_TEST_THREADS: 2

    clippy:
        name: clippy
        runs-on: ubuntu-latest
        timeout-minutes: 60
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@clippy
            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
            - run: cargo clippy --workspace --all-targets --all-features
              env:
                  RUSTFLAGS: -Dwarnings

    fmt:
        name: fmt
        runs-on: ubuntu-22.04-github-hosted-16core
        timeout-minutes: 60
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: rustfmt
            - run: cargo fmt --all --check

    forge-fmt:
        name: forge fmt
        runs-on: ubuntu-latest
        timeout-minutes: 60
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
            - name: forge fmt
              run: cargo run --bin forge -- fmt --check testdata/

    feature-checks:
        name: feature checks
        runs-on: ubuntu-22.04-github-hosted-16core
        timeout-minutes: 60
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
            - uses: taiki-e/install-action@cargo-hack
            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
            - name: cargo hack
              run: cargo hack check
