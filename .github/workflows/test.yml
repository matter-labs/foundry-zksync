name: test

permissions: {}

on:
  push:
    branches:
      - main
      - "*upstream*"
  pull_request:
    branches:
      - main
      - "*upstream*"

concurrency:
  cancel-in-progress: true
  group: ${{github.workflow}}-${{github.ref}}

env:
  CARGO_TERM_COLOR: always
  TARGET_RUST_VERSION: "stable"
  RUST_BACKTRACE: full
  RUSTC_WRAPPER: "sccache"

jobs:
  nextest:
    uses: ./.github/workflows/nextest.yml
    permissions:
      contents: read
    with:
      profile: default
    secrets: inherit

  doctest:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ env.TARGET_RUST_VERSION }}
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: cargo test
        run: cargo test --doc -p forge

  clippy:
    name: clippy
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # master
        with:
          toolchain: nightly
          components: clippy
      - uses: rui314/setup-mold@725a8794d15fc7563f59595bd9556495c0564878 # v1
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - run: cargo clippy --workspace --all-targets --all-features
        env:
          RUSTFLAGS: -Dwarnings

  rustfmt:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5
        with:
          toolchain: nightly-2025-03-19 # Required for unstable features in rustfmt
          components: rustfmt
      - run: cargo +nightly-2025-03-19 fmt --all --check

  forge-fmt:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # master
        with:
          toolchain: stable
      - uses: rui314/setup-mold@725a8794d15fc7563f59595bd9556495c0564878 # v1
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - name: forge fmt
        shell: bash
        run: ./.github/scripts/format.sh --check

  codespell:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: codespell-project/actions-codespell@v2
        with:
          skip: "*.json"

  crate-checks:
    # ubuntu-22.04 runs out of disk space
    runs-on: ubuntu-24.04-github-hosted-16core
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ env.TARGET_RUST_VERSION }}
      - uses: taiki-e/install-action@cargo-hack
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: cargo hack
        run: cargo hack check --each-feature --exclude-features isolate-by-default

  zk-cargo-test:
    runs-on: ubuntu-24.04-github-hosted-16core
    env:
      ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.TARGET_RUST_VERSION }}

      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest

      - name: Run anvil-zksync
        uses: dutterbutter/anvil-zksync-action@v1.1.0
        with:
          mode: fork
          forkUrl: mainnet
          log: info
          logFilePath: anvil_zksync.log
          target: x86_64-unknown-linux-gnu
          releaseTag: v0.6.1

      - name: Setup Git config
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "<>"
          git config --global url."https://github.com/".insteadOf "git@github.com:"

      - name: Run zk tests
        env:
          RUST_BACKTRACE: full
          TEST_MAINNET_URL: http://localhost:8011
        run: |
          ZK_DEBUG_HISTORICAL_BLOCK_HASHES=5 cargo nextest run --no-fail-fast --package '*' --lib --test '*' -E '(test(~zk) or package(~zksync)) and not test(~test_zk_aave_di)'

  deny:
    uses: ithacaxyz/ci/.github/workflows/deny.yml@9c8d0dc20e7ad02455d3fdab2378a05f29907630 # main
    permissions:
      contents: read

  check-ci-install:
    name: CI install
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Install foundry-zksync
        run: cp ./install-foundry-zksync ./foundryup-zksync/* /tmp/ && cd /tmp && ./install-foundry-zksync
      - name: Verify installation
        run: forge --version

  check-ci-install-anvil:
    name: CI install anvil-zksync
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Install foundry-zksync
        run: |
          cp ./install-foundry-zksync ./foundryup-zksync/* /tmp/
          cd /tmp
          ./install-foundry-zksync

      - name: Verify anvil-zksync installation
        run: anvil-zksync --version

  zk-tests-check:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.TARGET_RUST_VERSION }}
      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest
      - name: Verify zksync tests are not removed
        run: make zksync-tests-check
