use crate::foundry_test_utils::util::OutputExt;
use foundry_config::Config;
use foundry_test_utils::forgetest;

forgetest!(test_zk_inspect, |prj, cmd| {
    prj.insert_ds_test();
    prj.add_source(
        "Contracts.sol",
        r#"
//SPDX-license-identifier: MIT

pragma solidity ^0.8.20;

import "./test.sol";

contract ContractOne {
    int public i;

    constructor() {
        i = 0;
    }

    function foo() public{
        while(i<5){
            i++;
        }
    }
}
    "#,
    )
    .unwrap();

    prj.write_config(Config {
        gas_reports: (vec!["*".to_string()]),
        gas_reports_ignore: (vec![]),
        ..Default::default()
    });
    let out = cmd
        .arg("inspect")
        .arg("ContractOne")
        .arg("bytecode")
        .arg("--zksync")
        .assert_success()
        .get_output()
        .stdout_lossy();
    cmd.forge_fuse();

    // a ZKsync type bytecode
    assert_eq!(out, "\n0x0000008003000039000000400030043f0000000100200190000000180000c13d0000000d00100198000000280000613d000000000101043b000000e0011002700000000e0010009c000000210000613d0000000f0010009c000000280000c13d0000000001000416000000000001004b000000280000c13d000000000100041a000000110010009c000000140000213d000000040010008c000000160000213d0000000501000039000000000010041b00000000010000190000002b0001042e0000000001000416000000000001004b000000280000c13d000000000000041b0000002001000039000001000010044300000120000004430000000c010000410000002b0001042e0000000001000416000000000001004b000000280000c13d000000000100041a000000800010043f00000010010000410000002b0001042e00000000010000190000002c000104300000002a000004320000002b0001042e0000002c00010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000fffffffc00000000000000000000000000000000000000000000000000000000000000000000000000000000e5aa3d5800000000000000000000000000000000000000000000000000000000c298557800000000000000000000000000000000000000200000008000000000000000007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff79299d7f9850408f31103642316c6bfa6683271a56eac4638dbe51253ea5e7f\n");
});
